#!/bin/bash
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
cd $SCRIPT_DIR
source ../.env

CMD=$1
POD_NAME=validator

if [ -z $NAMESPACE ]; then
  echo "No namespace set. Defaulting to helium."
  NAMESPACE="helium"
fi

# Automatically create the namespace if it doesnt exist
namespace_exists=$(kubectl get namespaces | grep $NAMESPACE)
if [ -z "$namespace_exists" ]; then
  kubectl create ns $NAMESPACE
fi

# Install dynamic-hostports
hostports_exists=$(kubectl get pods --all-namespaces | grep dynamic-hostports)
if [ -z "$hostports_exists" ]; then
  kubectl apply -f https://raw.githubusercontent.com/0blu/dynamic-hostports-k8s/master/deploy.yaml
fi

# Install kube-prometheus-stack
prom_exists=$(kubectl get pods --all-namespaces | grep kube-prometheus-stack)
if [ -z "$prom_exists" ]; then
  ./dashboard/install
fi

validator_tpl=../k8s/validator.yml
validator_yml=../k8s/deploy.yml
target="<VALIDATOR_SETUP_SCRIPT>"
repl="$(cat ../k8s/validator-setup.sh)"

# Add tab spacing to the bash script to match yml
repl=$(while IFS= read -r line; do echo -e "              $line"; done < ../k8s/validator-setup.sh)

# Replace the target string in the yml
while IFS= read -r line; do
  echo "${line//$target/$repl}"
done < $validator_tpl > $validator_yml

kubectl apply -f $validator_yml -n $NAMESPACE
kubectl apply -f ../k8s/exporter-service.yml -n $NAMESPACE

rm $validator_yml

if [[ $CMD == "restart" ]]; then
  replica_id=$2

  if [ -z "$replica_id" ]; then
    # Delete all the validator pods. StatefulSet will automatically recreate them
    validator_count=$(kubectl get pods -n $NAMESPACE | grep -c "$POD_NAME")
    for ((i = 0 ; i < $validator_count ; i++)); do
      kubectl delete pod -n $NAMESPACE $POD_NAME-$i &
    done
  else
    # Just restart the pod specified
    kubectl delete pod $POD_NAME-$replica_id -n $NAMESPACE &
  fi
fi