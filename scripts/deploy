#!/bin/bash
#
# Use "scripts/deploy restart" to both deploy new config and restart pods
# Otherwise you'll want to delete and recreate the pods manually
#
set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
cd $SCRIPT_DIR
source helper
source ../.env

CMD=$1
POD_NAME=validator

context=$(kubectl config current-context)
echo "Deploying to $context..."

if [ -z $NAMESPACE ]; then
  echo "No namespace set. Defaulting to helium."
  NAMESPACE="helium"
fi

# Automatically create the namespace if it doesnt exist
namespace_exists=$(kubectl get namespaces | grep $NAMESPACE)
if [ -z "$namespace_exists" ]; then
  kubectl create ns $NAMESPACE
fi

# Install dynamic-hostports
hostports_exists=$(kubectl get pods --all-namespaces | grep dynamic-hostports)
if [ -z "$hostports_exists" ]; then
  kubectl apply -f https://raw.githubusercontent.com/0blu/dynamic-hostports-k8s/master/deploy.yaml
fi

# Install kube-prometheus-stack
prom_exists=$(kubectl get pods --all-namespaces | grep kube-prometheus-stack)
if [ -z "$prom_exists" ]; then
  ./dashboard/install
fi

validator_tpl=../k8s/validator.yml
validator_yml=../k8s/deploy.yml
target="<VALIDATOR_SETUP_SCRIPT>"
repl="$(cat ../k8s/validator-setup.sh)"

# Add tab spacing to the bash script to match yml
repl=$(while IFS= read -r line; do echo -e "              $line"; done < ../k8s/validator-setup.sh)

# Replace the target string in the yml
while IFS= read -r line; do
  echo "${line//$target/$repl}"
done < $validator_tpl > $validator_yml

# Get total validators needed for current context/environment
current_context=$(kubectl config current-context)
total_validators=1
if [[ "$current_context" == "$MAINNET_CLUSTER" ]]; then
  total_validators=$TOTAL_MAINNET_VALIDATORS
elif [[ "$current_context" == "$TESTNET_CLUSTER" ]]; then
  total_validators=$TOTAL_TESTNET_VALIDATORS
fi

# Replace TOTAL_VALIDATORS with current context
sed -i '' "s/<TOTAL_VALIDATORS>/$total_validators/g" $validator_yml

# TODO delete any stray comments
# TODO make sure every line ends with a semicolon

# Apply the new configurations
kubectl apply -f $validator_yml -n $NAMESPACE
kubectl apply -f ../k8s/exporter-service.yml -n $NAMESPACE

# Cleanup temp files
rm $validator_yml

if [[ $CMD == "restart" ]]; then
  ./restart pod
fi